/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[6].rules[1].use[0]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[6].rules[1].use[1]!./src/theme/variables.scss?ngGlobalStyle ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/** Ionic CSS Variables **/
.skalierungpopupclass {
  display: flex;
  justify-content: center;
  align-items: center;
}

:root {
  /** primary **/
  --ion-color-primary: #3880ff;
  --ion-color-primary-rgb: 56, 128, 255;
  --ion-color-primary-contrast: #ffffff;
  --ion-color-primary-contrast-rgb: 255, 255, 255;
  --ion-color-primary-shade: #3171e0;
  --ion-color-primary-tint: #4c8dff;
  /** secondary **/
  --ion-color-secondary: #3dc2ff;
  --ion-color-secondary-rgb: 61, 194, 255;
  --ion-color-secondary-contrast: #ffffff;
  --ion-color-secondary-contrast-rgb: 255, 255, 255;
  --ion-color-secondary-shade: #36abe0;
  --ion-color-secondary-tint: #50c8ff;
  /** tertiary **/
  --ion-color-tertiary: #5260ff;
  --ion-color-tertiary-rgb: 82, 96, 255;
  --ion-color-tertiary-contrast: #ffffff;
  --ion-color-tertiary-contrast-rgb: 255, 255, 255;
  --ion-color-tertiary-shade: #4854e0;
  --ion-color-tertiary-tint: #6370ff;
  /** success **/
  --ion-color-success: #2dd36f;
  --ion-color-success-rgb: 45, 211, 111;
  --ion-color-success-contrast: #ffffff;
  --ion-color-success-contrast-rgb: 255, 255, 255;
  --ion-color-success-shade: #28ba62;
  --ion-color-success-tint: #42d77d;
  /** warning **/
  --ion-color-warning: #ffc409;
  --ion-color-warning-rgb: 255, 196, 9;
  --ion-color-warning-contrast: #000000;
  --ion-color-warning-contrast-rgb: 0, 0, 0;
  --ion-color-warning-shade: #e0ac08;
  --ion-color-warning-tint: #ffca22;
  /** danger **/
  --ion-color-danger: #eb445a;
  --ion-color-danger-rgb: 235, 68, 90;
  --ion-color-danger-contrast: #ffffff;
  --ion-color-danger-contrast-rgb: 255, 255, 255;
  --ion-color-danger-shade: #cf3c4f;
  --ion-color-danger-tint: #ed576b;
  /** dark **/
  --ion-color-dark: #222428;
  --ion-color-dark-rgb: 34, 36, 40;
  --ion-color-dark-contrast: #ffffff;
  --ion-color-dark-contrast-rgb: 255, 255, 255;
  --ion-color-dark-shade: #1e2023;
  --ion-color-dark-tint: #383a3e;
  /** medium **/
  --ion-color-medium: #92949c;
  --ion-color-medium-rgb: 146, 148, 156;
  --ion-color-medium-contrast: #ffffff;
  --ion-color-medium-contrast-rgb: 255, 255, 255;
  --ion-color-medium-shade: #808289;
  --ion-color-medium-tint: #9d9fa6;
  /** light **/
  --ion-color-light: #f4f5f8;
  --ion-color-light-rgb: 244, 245, 248;
  --ion-color-light-contrast: #000000;
  --ion-color-light-contrast-rgb: 0, 0, 0;
  --ion-color-light-shade: #d7d8da;
  --ion-color-light-tint: #f5f6f9;
}

@media (prefers-color-scheme: dark) {
  /*
   * Dark Colors
   * -------------------------------------------
   */
  body {
    --ion-color-primary: #428cff;
    --ion-color-primary-rgb: 66,140,255;
    --ion-color-primary-contrast: #ffffff;
    --ion-color-primary-contrast-rgb: 255,255,255;
    --ion-color-primary-shade: #3a7be0;
    --ion-color-primary-tint: #5598ff;
    --ion-color-secondary: #50c8ff;
    --ion-color-secondary-rgb: 80,200,255;
    --ion-color-secondary-contrast: #ffffff;
    --ion-color-secondary-contrast-rgb: 255,255,255;
    --ion-color-secondary-shade: #46b0e0;
    --ion-color-secondary-tint: #62ceff;
    --ion-color-tertiary: #6a64ff;
    --ion-color-tertiary-rgb: 106,100,255;
    --ion-color-tertiary-contrast: #ffffff;
    --ion-color-tertiary-contrast-rgb: 255,255,255;
    --ion-color-tertiary-shade: #5d58e0;
    --ion-color-tertiary-tint: #7974ff;
    --ion-color-success: #2fdf75;
    --ion-color-success-rgb: 47,223,117;
    --ion-color-success-contrast: #000000;
    --ion-color-success-contrast-rgb: 0,0,0;
    --ion-color-success-shade: #29c467;
    --ion-color-success-tint: #44e283;
    --ion-color-warning: #ffd534;
    --ion-color-warning-rgb: 255,213,52;
    --ion-color-warning-contrast: #000000;
    --ion-color-warning-contrast-rgb: 0,0,0;
    --ion-color-warning-shade: #e0bb2e;
    --ion-color-warning-tint: #ffd948;
    --ion-color-danger: #ff4961;
    --ion-color-danger-rgb: 255,73,97;
    --ion-color-danger-contrast: #ffffff;
    --ion-color-danger-contrast-rgb: 255,255,255;
    --ion-color-danger-shade: #e04055;
    --ion-color-danger-tint: #ff5b71;
    --ion-color-dark: #f4f5f8;
    --ion-color-dark-rgb: 244,245,248;
    --ion-color-dark-contrast: #000000;
    --ion-color-dark-contrast-rgb: 0,0,0;
    --ion-color-dark-shade: #d7d8da;
    --ion-color-dark-tint: #f5f6f9;
    --ion-color-medium: #989aa2;
    --ion-color-medium-rgb: 152,154,162;
    --ion-color-medium-contrast: #000000;
    --ion-color-medium-contrast-rgb: 0,0,0;
    --ion-color-medium-shade: #86888f;
    --ion-color-medium-tint: #a2a4ab;
    --ion-color-light: #222428;
    --ion-color-light-rgb: 34,36,40;
    --ion-color-light-contrast: #ffffff;
    --ion-color-light-contrast-rgb: 255,255,255;
    --ion-color-light-shade: #1e2023;
    --ion-color-light-tint: #383a3e;
    --ion-item-background: #ffffff;
    --ion-item-color: black;
    --ion-toolbar-background: #1f1f1f;
    --ion-tab-bar-background: #1f1f1f;
    --ion-card-background: #1e1e1e;
  }
  /*
   * iOS Dark Theme
   * -------------------------------------------
   */
  .ios body {
    --ion-background-color: #000000;
    --ion-background-color-rgb: 0,0,0;
    --ion-text-color: #ffffff;
    --ion-text-color-rgb: 255,255,255;
    --ion-color-step-50: #0d0d0d;
    --ion-color-step-100: #1a1a1a;
    --ion-color-step-150: #262626;
    --ion-color-step-200: #333333;
    --ion-color-step-250: #404040;
    --ion-color-step-300: #4d4d4d;
    --ion-color-step-350: #595959;
    --ion-color-step-400: #666666;
    --ion-color-step-450: #737373;
    --ion-color-step-500: #808080;
    --ion-color-step-550: #8c8c8c;
    --ion-color-step-600: #999999;
    --ion-color-step-650: #a6a6a6;
    --ion-color-step-700: #b3b3b3;
    --ion-color-step-750: #bfbfbf;
    --ion-color-step-800: #cccccc;
    --ion-color-step-850: #d9d9d9;
    --ion-color-step-900: #e6e6e6;
    --ion-color-step-950: #f2f2f2;
    /*
    --ion-item-background: #000000;

    --ion-item-background: white;

    --ion-card-background: #1c1c1d;


     */
  }
  .ios ion-modal {
    --ion-background-color: var(--ion-color-step-100);
    --ion-toolbar-background: var(--ion-color-step-150);
    --ion-toolbar-border-color: var(--ion-color-step-250);
  }
  /*
   * Material Design Dark Theme
   * -------------------------------------------
   */
  .md body {
    --ion-background-color: #121212;
    --ion-background-color-rgb: 18,18,18;
    --ion-text-color: #ffffff;
    --ion-text-color-rgb: 255,255,255;
    --ion-border-color: #222222;
    --ion-color-step-50: #1e1e1e;
    --ion-color-step-100: #2a2a2a;
    --ion-color-step-150: #363636;
    --ion-color-step-200: #414141;
    --ion-color-step-250: #4d4d4d;
    --ion-color-step-300: #595959;
    --ion-color-step-350: #656565;
    --ion-color-step-400: #717171;
    --ion-color-step-450: #7d7d7d;
    --ion-color-step-500: #898989;
    --ion-color-step-550: #949494;
    --ion-color-step-600: #a0a0a0;
    --ion-color-step-650: #acacac;
    --ion-color-step-700: #b8b8b8;
    --ion-color-step-750: #c4c4c4;
    --ion-color-step-800: #d0d0d0;
    --ion-color-step-850: #dbdbdb;
    --ion-color-step-900: #e7e7e7;
    --ion-color-step-950: #f3f3f3;
    /*
    --ion-item-background: #1e1e1e;

    --ion-toolbar-background: #1f1f1f;

    --ion-tab-bar-background: #1f1f1f;

    --ion-card-background: #1e1e1e;

     */
  }
}
/*!**********************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/@ionic/angular/css/core.css ***!
  \**********************************************************************************************************************************************************************************************************************************/
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
html.ios {
  --ion-default-font: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Roboto", sans-serif;
}

html.md {
  --ion-default-font: "Roboto", "Helvetica Neue", sans-serif;
}

html {
  --ion-default-dynamic-font: -apple-system-body;
  --ion-font-family: var(--ion-default-font);
}

body {
  background: var(--ion-background-color);
}

body.backdrop-no-scroll {
  overflow: hidden;
}

/**
 * Card style modal needs additional padding on the
 * top of the header. We accomplish this by targeting
 * the first toolbar in the header.
 * Footer also needs this. We do not adjust the bottom
 * padding though because of the safe area.
 */
html.ios ion-modal.modal-card ion-header ion-toolbar:first-of-type,
html.ios ion-modal.modal-sheet ion-header ion-toolbar:first-of-type,
html.ios ion-modal ion-footer ion-toolbar:first-of-type {
  padding-top: 6px;
}

/**
* Card style modal needs additional padding on the
* bottom of the header. We accomplish this by targeting
* the last toolbar in the header.
*/
html.ios ion-modal.modal-card ion-header ion-toolbar:last-of-type,
html.ios ion-modal.modal-sheet ion-header ion-toolbar:last-of-type {
  padding-bottom: 6px;
}

/**
* Add padding on the left and right
* of toolbars while accounting for
* safe area values when in landscape.
*/
html.ios ion-modal ion-toolbar {
  padding-right: calc(var(--ion-safe-area-right) + 8px);
  padding-left: calc(var(--ion-safe-area-left) + 8px);
}

/**
 * Card style modal on iPadOS
 * should only have backdrop on first instance.
 */
@media screen and (min-width: 768px) {
  html.ios ion-modal.modal-card:first-of-type {
    --backdrop-opacity: 0.18;
  }
}
/**
 * Subsequent modals should not have a backdrop/box shadow
 * as it will cause the screen to appear to get progressively
 * darker. With Ionic 6, declarative modals made it
 * possible to have multiple non-presented modals in the DOM,
 * so we could no longer rely on ion-modal:first-of-type.
 * Here we disable the opacity/box-shadow for every modal
 * that comes after the first presented modal.
 *
 * Note: ion-modal:not(.overlay-hidden):first-of-type
 * does not match the first modal to not have
 * the .overlay-hidden class, it will match the
 * first modal in general only if it does not
 * have the .overlay-hidden class.
 * The :nth-child() pseudo-class has support
 * for selectors which would help us here. At the
 * time of writing it does not have great cross browser
 * support.
 *
 * Note 2: This should only apply to non-card and
 * non-sheet modals. Card and sheet modals have their
 * own criteria for displaying backdrops/box shadows.
 *
 * Do not use :not(.overlay-hidden) in place of
 * .show-modal because that triggers a memory
 * leak in Blink: https://bugs.chromium.org/p/chromium/issues/detail?id=1418768
 */
ion-modal.modal-default.show-modal ~ ion-modal.modal-default {
  --backdrop-opacity: 0;
  --box-shadow: none;
}

/**
 * This works around a bug in WebKit where the
 * content will overflow outside of the bottom border
 * radius when re-painting. As long as a single
 * border radius value is set on .ion-page, this
 * issue does not happen. We set the top left radius
 * here because the top left corner will always have a
 * radius no matter the platform.
 * This behavior only applies to card modals.
 */
html.ios ion-modal.modal-card .ion-page {
  border-top-left-radius: var(--border-radius);
}

.ion-color-primary {
  --ion-color-base: var(--ion-color-primary, #3880ff) !important;
  --ion-color-base-rgb: var(--ion-color-primary-rgb, 56, 128, 255) !important;
  --ion-color-contrast: var(--ion-color-primary-contrast, #fff) !important;
  --ion-color-contrast-rgb: var(--ion-color-primary-contrast-rgb, 255, 255, 255) !important;
  --ion-color-shade: var(--ion-color-primary-shade, #3171e0) !important;
  --ion-color-tint: var(--ion-color-primary-tint, #4c8dff) !important;
}

.ion-color-secondary {
  --ion-color-base: var(--ion-color-secondary, #3dc2ff) !important;
  --ion-color-base-rgb: var(--ion-color-secondary-rgb, 61, 194, 255) !important;
  --ion-color-contrast: var(--ion-color-secondary-contrast, #fff) !important;
  --ion-color-contrast-rgb: var(--ion-color-secondary-contrast-rgb, 255, 255, 255) !important;
  --ion-color-shade: var(--ion-color-secondary-shade, #36abe0) !important;
  --ion-color-tint: var(--ion-color-secondary-tint, #50c8ff) !important;
}

.ion-color-tertiary {
  --ion-color-base: var(--ion-color-tertiary, #5260ff) !important;
  --ion-color-base-rgb: var(--ion-color-tertiary-rgb, 82, 96, 255) !important;
  --ion-color-contrast: var(--ion-color-tertiary-contrast, #fff) !important;
  --ion-color-contrast-rgb: var(--ion-color-tertiary-contrast-rgb, 255, 255, 255) !important;
  --ion-color-shade: var(--ion-color-tertiary-shade, #4854e0) !important;
  --ion-color-tint: var(--ion-color-tertiary-tint, #6370ff) !important;
}

.ion-color-success {
  --ion-color-base: var(--ion-color-success, #2dd36f) !important;
  --ion-color-base-rgb: var(--ion-color-success-rgb, 45, 211, 111) !important;
  --ion-color-contrast: var(--ion-color-success-contrast, #fff) !important;
  --ion-color-contrast-rgb: var(--ion-color-success-contrast-rgb, 255, 255, 255) !important;
  --ion-color-shade: var(--ion-color-success-shade, #28ba62) !important;
  --ion-color-tint: var(--ion-color-success-tint, #42d77d) !important;
}

.ion-color-warning {
  --ion-color-base: var(--ion-color-warning, #ffc409) !important;
  --ion-color-base-rgb: var(--ion-color-warning-rgb, 255, 196, 9) !important;
  --ion-color-contrast: var(--ion-color-warning-contrast, #000) !important;
  --ion-color-contrast-rgb: var(--ion-color-warning-contrast-rgb, 0, 0, 0) !important;
  --ion-color-shade: var(--ion-color-warning-shade, #e0ac08) !important;
  --ion-color-tint: var(--ion-color-warning-tint, #ffca22) !important;
}

.ion-color-danger {
  --ion-color-base: var(--ion-color-danger, #eb445a) !important;
  --ion-color-base-rgb: var(--ion-color-danger-rgb, 235, 68, 90) !important;
  --ion-color-contrast: var(--ion-color-danger-contrast, #fff) !important;
  --ion-color-contrast-rgb: var(--ion-color-danger-contrast-rgb, 255, 255, 255) !important;
  --ion-color-shade: var(--ion-color-danger-shade, #cf3c4f) !important;
  --ion-color-tint: var(--ion-color-danger-tint, #ed576b) !important;
}

.ion-color-light {
  --ion-color-base: var(--ion-color-light, #f4f5f8) !important;
  --ion-color-base-rgb: var(--ion-color-light-rgb, 244, 245, 248) !important;
  --ion-color-contrast: var(--ion-color-light-contrast, #000) !important;
  --ion-color-contrast-rgb: var(--ion-color-light-contrast-rgb, 0, 0, 0) !important;
  --ion-color-shade: var(--ion-color-light-shade, #d7d8da) !important;
  --ion-color-tint: var(--ion-color-light-tint, #f5f6f9) !important;
}

.ion-color-medium {
  --ion-color-base: var(--ion-color-medium, #92949c) !important;
  --ion-color-base-rgb: var(--ion-color-medium-rgb, 146, 148, 156) !important;
  --ion-color-contrast: var(--ion-color-medium-contrast, #fff) !important;
  --ion-color-contrast-rgb: var(--ion-color-medium-contrast-rgb, 255, 255, 255) !important;
  --ion-color-shade: var(--ion-color-medium-shade, #808289) !important;
  --ion-color-tint: var(--ion-color-medium-tint, #9d9fa6) !important;
}

.ion-color-dark {
  --ion-color-base: var(--ion-color-dark, #222428) !important;
  --ion-color-base-rgb: var(--ion-color-dark-rgb, 34, 36, 40) !important;
  --ion-color-contrast: var(--ion-color-dark-contrast, #fff) !important;
  --ion-color-contrast-rgb: var(--ion-color-dark-contrast-rgb, 255, 255, 255) !important;
  --ion-color-shade: var(--ion-color-dark-shade, #1e2023) !important;
  --ion-color-tint: var(--ion-color-dark-tint, #383a3e) !important;
}

.ion-page {
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  display: flex;
  position: absolute;
  flex-direction: column;
  justify-content: space-between;
  contain: layout size style;
  z-index: 0;
}

/**
 * When making custom dialogs, using
 * ion-content is not required. As a result,
 * some developers may wish to have dialogs
 * that are automatically sized by the browser.
 * These changes allow certain dimension values
 * such as fit-content to work correctly.
 */
ion-modal > .ion-page {
  position: relative;
  contain: layout style;
  height: 100%;
}

.split-pane-visible > .ion-page.split-pane-main {
  position: relative;
}

ion-route,
ion-route-redirect,
ion-router,
ion-select-option,
ion-nav-controller,
ion-menu-controller,
ion-action-sheet-controller,
ion-alert-controller,
ion-loading-controller,
ion-modal-controller,
ion-picker-controller,
ion-popover-controller,
ion-toast-controller,
.ion-page-hidden {
  /* stylelint-disable-next-line declaration-no-important */
  display: none !important;
}

.ion-page-invisible {
  opacity: 0;
}

.can-go-back > ion-header ion-back-button {
  display: block;
}

html.plt-ios.plt-hybrid, html.plt-ios.plt-pwa {
  --ion-statusbar-padding: 20px;
}

@supports (padding-top: 20px) {
  html {
    --ion-safe-area-top: var(--ion-statusbar-padding);
  }
}
@supports (padding-top: env(safe-area-inset-top)) {
  html {
    --ion-safe-area-top: env(safe-area-inset-top);
    --ion-safe-area-bottom: env(safe-area-inset-bottom);
    --ion-safe-area-left: env(safe-area-inset-left);
    --ion-safe-area-right: env(safe-area-inset-right);
  }
}
ion-card.ion-color .ion-inherit-color,
ion-card-header.ion-color .ion-inherit-color {
  color: inherit;
}

.menu-content {
  transform: translate3d(0,  0,  0);
}

.menu-content-open {
  cursor: pointer;
  touch-action: manipulation;
  /**
   * The containing element itself should be clickable but
   * everything inside of it should not clickable when menu is open
   *
   * Setting pointer-events after scrolling has already started
   * will not cancel scrolling which is why we also set
   * overflow-y below.
   */
  pointer-events: none;
  /**
   * This accounts for scenarios where the main content itself
   * is scrollable.
   */
  overflow-y: hidden;
}

/**
 * Setting overflow cancels any in-progress scrolling
 * when the menu opens. This prevents users from accidentally
 * scrolling the main content while also dragging the menu open.
 * The code below accounts for both ion-content and then custom
 * scroll containers within ion-content (such as virtual scroll)
 */
.menu-content-open ion-content {
  --overflow: hidden;
}

.menu-content-open .ion-content-scroll-host {
  overflow: hidden;
}

.ios .menu-content-reveal {
  box-shadow: -8px 0 42px rgba(0, 0, 0, 0.08);
}

[dir=rtl].ios .menu-content-reveal {
  box-shadow: 8px 0 42px rgba(0, 0, 0, 0.08);
}

.md .menu-content-reveal {
  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);
}

.md .menu-content-push {
  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);
}

ion-accordion-group.accordion-group-expand-inset > ion-accordion:first-of-type {
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
}

ion-accordion-group.accordion-group-expand-inset > ion-accordion:last-of-type {
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
}

ion-accordion-group > ion-accordion:last-of-type ion-item[slot=header] {
  --border-width: 0px;
}

ion-accordion.accordion-animated > [slot=header] .ion-accordion-toggle-icon {
  transition: 300ms transform cubic-bezier(0.25, 0.8, 0.5, 1);
}

@media (prefers-reduced-motion: reduce) {
  ion-accordion .ion-accordion-toggle-icon {
    /* stylelint-disable declaration-no-important */
    transition: none !important;
  }
}
/**
 * The > [slot="header"] selector ensures that we do
 * not modify toggle icons for any nested accordions. The state
 * of one accordion should not affect any accordions inside
 * of a nested accordion group.
 */
ion-accordion.accordion-expanding > [slot=header] .ion-accordion-toggle-icon,
ion-accordion.accordion-expanded > [slot=header] .ion-accordion-toggle-icon {
  transform: rotate(180deg);
}

ion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-previous ion-item[slot=header] {
  --border-width: 0px;
  --inner-border-width: 0px;
}

ion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-expanding:first-of-type,
ion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-expanded:first-of-type {
  margin-top: 0;
}

ion-input input::-webkit-date-and-time-value {
  text-align: start;
}

/**
 * The .ion-datetime-button-overlay class contains
 * styles that allow any modal/popover to be
 * sized according to the dimensions of the datetime
 * when used with ion-datetime-button.
 */
.ion-datetime-button-overlay {
  --width: fit-content;
  --height: fit-content;
}

/**
 * The grid variant can scale down when inline.
 * When used in a `fit-content` overlay, this causes
 * the overlay to shrink when the month/year picker is open.
 * Explicitly setting the dimensions lets us have a consistently
 * sized grid interface.
 */
.ion-datetime-button-overlay ion-datetime.datetime-grid {
  width: 320px;
  min-height: 320px;
}

/*# sourceMappingURL=core.css.map */

/*!***************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/@ionic/angular/css/normalize.css ***!
  \***************************************************************************************************************************************************************************************************************************************/
audio,
canvas,
progress,
video {
  vertical-align: baseline;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

b,
strong {
  font-weight: bold;
}

img {
  max-width: 100%;
}

hr {
  height: 1px;
  border-width: 0;
  box-sizing: content-box;
}

pre {
  overflow: auto;
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

label,
input,
select,
textarea {
  font-family: inherit;
  line-height: normal;
}

textarea {
  overflow: auto;
  height: auto;
  font: inherit;
  color: inherit;
}

textarea::placeholder {
  padding-left: 2px;
}

form,
input,
optgroup,
select {
  margin: 0;
  font: inherit;
  color: inherit;
}

html input[type=button],
input[type=reset],
input[type=submit] {
  cursor: pointer;
  -webkit-appearance: button;
}

a,
a div,
a span,
a ion-icon,
a ion-label,
button,
button div,
button span,
button ion-icon,
button ion-label,
.ion-tappable,
[tappable],
[tappable] div,
[tappable] span,
[tappable] ion-icon,
[tappable] ion-label,
input,
textarea {
  touch-action: manipulation;
}

a ion-label,
button ion-label {
  pointer-events: none;
}

button {
  padding: 0;
  border: 0;
  border-radius: 0;
  font-family: inherit;
  font-style: inherit;
  font-variant: inherit;
  line-height: 1;
  text-transform: none;
  cursor: pointer;
  -webkit-appearance: button;
}

[tappable] {
  cursor: pointer;
}

a[disabled],
button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  height: auto;
}

input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*# sourceMappingURL=normalize.css.map */

/*!***************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/@ionic/angular/css/structure.css ***!
  \***************************************************************************************************************************************************************************************************************************************/
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
* {
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

html {
  width: 100%;
  height: 100%;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

html:not(.hydrated) body {
  display: none;
}

html.ion-ce body {
  display: block;
}

html.plt-pwa {
  height: 100vh;
}

body {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 0;
  padding-right: 0;
  padding-top: 0;
  padding-bottom: 0;
  position: fixed;
  width: 100%;
  max-width: 100%;
  height: 100%;
  max-height: 100%;
  /**
   * Because body has position: fixed,
   * it should be promoted to its own
   * layer.
   *
   * WebKit does not always promote
   * the body to its own layer on page
   * load in Ionic apps. Once scrolling on
   * ion-content starts, WebKit will promote
   * body. Unfortunately, this causes a re-paint
   * which results in scrolling being halted
   * until the next user gesture.
   *
   * This impacts the Custom Elements build.
   * The lazy loaded build causes the browser to
   * re-paint during hydration which causes WebKit
   * to promote body to its own layer.
   * In the CE Build, this hydration does not
   * happen, so the additional re-paint does not occur.
   */
  transform: translateZ(0);
  text-rendering: optimizeLegibility;
  overflow: hidden;
  touch-action: manipulation;
  -webkit-user-drag: none;
  -ms-content-zooming: none;
  word-wrap: break-word;
  overscroll-behavior-y: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/*# sourceMappingURL=structure.css.map */

/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/@ionic/angular/css/typography.css ***!
  \****************************************************************************************************************************************************************************************************************************************/
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
html {
  font-family: var(--ion-font-family);
}

/**
 * Dynamic Type is an iOS-only feature, so
 * this should only be enabled on iOS devices.
 */
@supports (-webkit-touch-callout: none) {
  html {
    /**
     * Includes fallback if Dynamic Type is not enabled.
     */
    font: var(--ion-dynamic-font, 16px var(--ion-font-family));
  }
}
a {
  background-color: transparent;
  color: var(--ion-color-primary, #3880ff);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 16px;
  margin-bottom: 10px;
  font-weight: 500;
  line-height: 1.2;
}

h1 {
  margin-top: 20px;
  font-size: 1.625rem;
}

h2 {
  margin-top: 18px;
  font-size: 1.5rem;
}

h3 {
  font-size: 1.375rem;
}

h4 {
  font-size: 1.25rem;
}

h5 {
  font-size: 1.125rem;
}

h6 {
  font-size: 1rem;
}

small {
  font-size: 75%;
}

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/*# sourceMappingURL=typography.css.map */

/*!*************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/@ionic/angular/css/display.css ***!
  \*************************************************************************************************************************************************************************************************************************************/
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
.ion-hide {
  display: none !important;
}

.ion-hide-up {
  display: none !important;
}

.ion-hide-down {
  display: none !important;
}

@media (min-width: 576px) {
  .ion-hide-sm-up {
    display: none !important;
  }
}
@media (max-width: 575.98px) {
  .ion-hide-sm-down {
    display: none !important;
  }
}
@media (min-width: 768px) {
  .ion-hide-md-up {
    display: none !important;
  }
}
@media (max-width: 767.98px) {
  .ion-hide-md-down {
    display: none !important;
  }
}
@media (min-width: 992px) {
  .ion-hide-lg-up {
    display: none !important;
  }
}
@media (max-width: 991.98px) {
  .ion-hide-lg-down {
    display: none !important;
  }
}
@media (min-width: 1200px) {
  .ion-hide-xl-up {
    display: none !important;
  }
}
@media (max-width: 1199.98px) {
  .ion-hide-xl-down {
    display: none !important;
  }
}

/*# sourceMappingURL=display.css.map */

/*!*************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/@ionic/angular/css/padding.css ***!
  \*************************************************************************************************************************************************************************************************************************************/
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
.ion-no-padding {
  --padding-start: 0;
  --padding-end: 0;
  --padding-top: 0;
  --padding-bottom: 0;
  padding-left: 0;
  padding-right: 0;
  padding-top: 0;
  padding-bottom: 0;
}

.ion-padding {
  --padding-start: var(--ion-padding, 16px);
  --padding-end: var(--ion-padding, 16px);
  --padding-top: var(--ion-padding, 16px);
  --padding-bottom: var(--ion-padding, 16px);
  padding-inline-start: var(--ion-padding, 16px);
  padding-inline-end: var(--ion-padding, 16px);
  padding-top: var(--ion-padding, 16px);
  padding-bottom: var(--ion-padding, 16px);
}

.ion-padding-top {
  --padding-top: var(--ion-padding, 16px);
  padding-top: var(--ion-padding, 16px);
}

.ion-padding-start {
  --padding-start: var(--ion-padding, 16px);
  padding-inline-start: var(--ion-padding, 16px);
}

.ion-padding-end {
  --padding-end: var(--ion-padding, 16px);
  padding-inline-end: var(--ion-padding, 16px);
}

.ion-padding-bottom {
  --padding-bottom: var(--ion-padding, 16px);
  padding-bottom: var(--ion-padding, 16px);
}

.ion-padding-vertical {
  --padding-top: var(--ion-padding, 16px);
  --padding-bottom: var(--ion-padding, 16px);
  padding-top: var(--ion-padding, 16px);
  padding-bottom: var(--ion-padding, 16px);
}

.ion-padding-horizontal {
  --padding-start: var(--ion-padding, 16px);
  --padding-end: var(--ion-padding, 16px);
  padding-inline-start: var(--ion-padding, 16px);
  padding-inline-end: var(--ion-padding, 16px);
}

.ion-no-margin {
  --margin-start: 0;
  --margin-end: 0;
  --margin-top: 0;
  --margin-bottom: 0;
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
}

.ion-margin {
  --margin-start: var(--ion-margin, 16px);
  --margin-end: var(--ion-margin, 16px);
  --margin-top: var(--ion-margin, 16px);
  --margin-bottom: var(--ion-margin, 16px);
  margin-inline-start: var(--ion-margin, 16px);
  margin-inline-end: var(--ion-margin, 16px);
  margin-top: var(--ion-margin, 16px);
  margin-bottom: var(--ion-margin, 16px);
}

.ion-margin-top {
  --margin-top: var(--ion-margin, 16px);
  margin-top: var(--ion-margin, 16px);
}

.ion-margin-start {
  --margin-start: var(--ion-margin, 16px);
  margin-inline-start: var(--ion-margin, 16px);
}

.ion-margin-end {
  --margin-end: var(--ion-margin, 16px);
  margin-inline-end: var(--ion-margin, 16px);
}

.ion-margin-bottom {
  --margin-bottom: var(--ion-margin, 16px);
  margin-bottom: var(--ion-margin, 16px);
}

.ion-margin-vertical {
  --margin-top: var(--ion-margin, 16px);
  --margin-bottom: var(--ion-margin, 16px);
  margin-top: var(--ion-margin, 16px);
  margin-bottom: var(--ion-margin, 16px);
}

.ion-margin-horizontal {
  --margin-start: var(--ion-margin, 16px);
  --margin-end: var(--ion-margin, 16px);
  margin-inline-start: var(--ion-margin, 16px);
  margin-inline-end: var(--ion-margin, 16px);
}

/*# sourceMappingURL=padding.css.map */

/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/@ionic/angular/css/float-elements.css ***!
  \********************************************************************************************************************************************************************************************************************************************/
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
.ion-float-left {
  float: left !important;
}

.ion-float-right {
  float: right !important;
}

.ion-float-start {
  float: left !important;
}
:host-context([dir=rtl]) .ion-float-start {
  float: right !important;
}

[dir=rtl] .ion-float-start {
  float: right !important;
}

@supports selector(:dir(rtl)) {
  .ion-float-start:dir(rtl) {
    float: right !important;
  }
}

.ion-float-end {
  float: right !important;
}
:host-context([dir=rtl]) .ion-float-end {
  float: left !important;
}

[dir=rtl] .ion-float-end {
  float: left !important;
}

@supports selector(:dir(rtl)) {
  .ion-float-end:dir(rtl) {
    float: left !important;
  }
}

@media (min-width: 576px) {
  .ion-float-sm-left {
    float: left !important;
  }

  .ion-float-sm-right {
    float: right !important;
  }

  .ion-float-sm-start {
    float: left !important;
  }
  :host-context([dir=rtl]) .ion-float-sm-start {
    float: right !important;
  }

  [dir=rtl] .ion-float-sm-start {
    float: right !important;
  }

  @supports selector(:dir(rtl)) {
    .ion-float-sm-start:dir(rtl) {
      float: right !important;
    }
  }

  .ion-float-sm-end {
    float: right !important;
  }
  :host-context([dir=rtl]) .ion-float-sm-end {
    float: left !important;
  }

  [dir=rtl] .ion-float-sm-end {
    float: left !important;
  }

  @supports selector(:dir(rtl)) {
    .ion-float-sm-end:dir(rtl) {
      float: left !important;
    }
  }
}
@media (min-width: 768px) {
  .ion-float-md-left {
    float: left !important;
  }

  .ion-float-md-right {
    float: right !important;
  }

  .ion-float-md-start {
    float: left !important;
  }
  :host-context([dir=rtl]) .ion-float-md-start {
    float: right !important;
  }

  [dir=rtl] .ion-float-md-start {
    float: right !important;
  }

  @supports selector(:dir(rtl)) {
    .ion-float-md-start:dir(rtl) {
      float: right !important;
    }
  }

  .ion-float-md-end {
    float: right !important;
  }
  :host-context([dir=rtl]) .ion-float-md-end {
    float: left !important;
  }

  [dir=rtl] .ion-float-md-end {
    float: left !important;
  }

  @supports selector(:dir(rtl)) {
    .ion-float-md-end:dir(rtl) {
      float: left !important;
    }
  }
}
@media (min-width: 992px) {
  .ion-float-lg-left {
    float: left !important;
  }

  .ion-float-lg-right {
    float: right !important;
  }

  .ion-float-lg-start {
    float: left !important;
  }
  :host-context([dir=rtl]) .ion-float-lg-start {
    float: right !important;
  }

  [dir=rtl] .ion-float-lg-start {
    float: right !important;
  }

  @supports selector(:dir(rtl)) {
    .ion-float-lg-start:dir(rtl) {
      float: right !important;
    }
  }

  .ion-float-lg-end {
    float: right !important;
  }
  :host-context([dir=rtl]) .ion-float-lg-end {
    float: left !important;
  }

  [dir=rtl] .ion-float-lg-end {
    float: left !important;
  }

  @supports selector(:dir(rtl)) {
    .ion-float-lg-end:dir(rtl) {
      float: left !important;
    }
  }
}
@media (min-width: 1200px) {
  .ion-float-xl-left {
    float: left !important;
  }

  .ion-float-xl-right {
    float: right !important;
  }

  .ion-float-xl-start {
    float: left !important;
  }
  :host-context([dir=rtl]) .ion-float-xl-start {
    float: right !important;
  }

  [dir=rtl] .ion-float-xl-start {
    float: right !important;
  }

  @supports selector(:dir(rtl)) {
    .ion-float-xl-start:dir(rtl) {
      float: right !important;
    }
  }

  .ion-float-xl-end {
    float: right !important;
  }
  :host-context([dir=rtl]) .ion-float-xl-end {
    float: left !important;
  }

  [dir=rtl] .ion-float-xl-end {
    float: left !important;
  }

  @supports selector(:dir(rtl)) {
    .ion-float-xl-end:dir(rtl) {
      float: left !important;
    }
  }
}

/*# sourceMappingURL=float-elements.css.map */

/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/@ionic/angular/css/text-alignment.css ***!
  \********************************************************************************************************************************************************************************************************************************************/
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
.ion-text-center {
  text-align: center !important;
}

.ion-text-justify {
  text-align: justify !important;
}

.ion-text-start {
  text-align: start !important;
}

.ion-text-end {
  text-align: end !important;
}

.ion-text-left {
  text-align: left !important;
}

.ion-text-right {
  text-align: right !important;
}

.ion-text-nowrap {
  white-space: nowrap !important;
}

.ion-text-wrap {
  white-space: normal !important;
}

@media (min-width: 576px) {
  .ion-text-sm-center {
    text-align: center !important;
  }

  .ion-text-sm-justify {
    text-align: justify !important;
  }

  .ion-text-sm-start {
    text-align: start !important;
  }

  .ion-text-sm-end {
    text-align: end !important;
  }

  .ion-text-sm-left {
    text-align: left !important;
  }

  .ion-text-sm-right {
    text-align: right !important;
  }

  .ion-text-sm-nowrap {
    white-space: nowrap !important;
  }

  .ion-text-sm-wrap {
    white-space: normal !important;
  }
}
@media (min-width: 768px) {
  .ion-text-md-center {
    text-align: center !important;
  }

  .ion-text-md-justify {
    text-align: justify !important;
  }

  .ion-text-md-start {
    text-align: start !important;
  }

  .ion-text-md-end {
    text-align: end !important;
  }

  .ion-text-md-left {
    text-align: left !important;
  }

  .ion-text-md-right {
    text-align: right !important;
  }

  .ion-text-md-nowrap {
    white-space: nowrap !important;
  }

  .ion-text-md-wrap {
    white-space: normal !important;
  }
}
@media (min-width: 992px) {
  .ion-text-lg-center {
    text-align: center !important;
  }

  .ion-text-lg-justify {
    text-align: justify !important;
  }

  .ion-text-lg-start {
    text-align: start !important;
  }

  .ion-text-lg-end {
    text-align: end !important;
  }

  .ion-text-lg-left {
    text-align: left !important;
  }

  .ion-text-lg-right {
    text-align: right !important;
  }

  .ion-text-lg-nowrap {
    white-space: nowrap !important;
  }

  .ion-text-lg-wrap {
    white-space: normal !important;
  }
}
@media (min-width: 1200px) {
  .ion-text-xl-center {
    text-align: center !important;
  }

  .ion-text-xl-justify {
    text-align: justify !important;
  }

  .ion-text-xl-start {
    text-align: start !important;
  }

  .ion-text-xl-end {
    text-align: end !important;
  }

  .ion-text-xl-left {
    text-align: left !important;
  }

  .ion-text-xl-right {
    text-align: right !important;
  }

  .ion-text-xl-nowrap {
    white-space: nowrap !important;
  }

  .ion-text-xl-wrap {
    white-space: normal !important;
  }
}

/*# sourceMappingURL=text-alignment.css.map */

/*!*************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/@ionic/angular/css/text-transformation.css ***!
  \*************************************************************************************************************************************************************************************************************************************************/
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
.ion-text-uppercase {
  /* stylelint-disable-next-line declaration-no-important */
  text-transform: uppercase !important;
}

.ion-text-lowercase {
  /* stylelint-disable-next-line declaration-no-important */
  text-transform: lowercase !important;
}

.ion-text-capitalize {
  /* stylelint-disable-next-line declaration-no-important */
  text-transform: capitalize !important;
}

@media (min-width: 576px) {
  .ion-text-sm-uppercase {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: uppercase !important;
  }

  .ion-text-sm-lowercase {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: lowercase !important;
  }

  .ion-text-sm-capitalize {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: capitalize !important;
  }
}
@media (min-width: 768px) {
  .ion-text-md-uppercase {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: uppercase !important;
  }

  .ion-text-md-lowercase {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: lowercase !important;
  }

  .ion-text-md-capitalize {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: capitalize !important;
  }
}
@media (min-width: 992px) {
  .ion-text-lg-uppercase {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: uppercase !important;
  }

  .ion-text-lg-lowercase {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: lowercase !important;
  }

  .ion-text-lg-capitalize {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: capitalize !important;
  }
}
@media (min-width: 1200px) {
  .ion-text-xl-uppercase {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: uppercase !important;
  }

  .ion-text-xl-lowercase {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: lowercase !important;
  }

  .ion-text-xl-capitalize {
    /* stylelint-disable-next-line declaration-no-important */
    text-transform: capitalize !important;
  }
}

/*# sourceMappingURL=text-transformation.css.map */

/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/@ionic/angular/css/flex-utils.css ***!
  \****************************************************************************************************************************************************************************************************************************************/
.ion-align-self-start {
  align-self: flex-start !important;
}

.ion-align-self-end {
  align-self: flex-end !important;
}

.ion-align-self-center {
  align-self: center !important;
}

.ion-align-self-stretch {
  align-self: stretch !important;
}

.ion-align-self-baseline {
  align-self: baseline !important;
}

.ion-align-self-auto {
  align-self: auto !important;
}

.ion-wrap {
  flex-wrap: wrap !important;
}

.ion-nowrap {
  flex-wrap: nowrap !important;
}

.ion-wrap-reverse {
  flex-wrap: wrap-reverse !important;
}

.ion-justify-content-start {
  justify-content: flex-start !important;
}

.ion-justify-content-center {
  justify-content: center !important;
}

.ion-justify-content-end {
  justify-content: flex-end !important;
}

.ion-justify-content-around {
  justify-content: space-around !important;
}

.ion-justify-content-between {
  justify-content: space-between !important;
}

.ion-justify-content-evenly {
  justify-content: space-evenly !important;
}

.ion-align-items-start {
  align-items: flex-start !important;
}

.ion-align-items-center {
  align-items: center !important;
}

.ion-align-items-end {
  align-items: flex-end !important;
}

.ion-align-items-stretch {
  align-items: stretch !important;
}

.ion-align-items-baseline {
  align-items: baseline !important;
}

/*# sourceMappingURL=flex-utils.css.map */

/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].rules[0].oneOf[0].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[6].rules[1].use[0]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[6].rules[1].use[1]!./src/global.scss?ngGlobalStyle ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */
:root {
  --ion-color-gruen: #008000;
  --ion-color-gruen-rgb: 0, 128, 0;
  --ion-color-gruen-contrast: #ffffff;
  --ion-color-gruen-contrast-rgb: 0, 0, 0;
  --ion-color-gruen-shade: #009000;
  --ion-color-gruen-tint: #009000;
  /*
  --ion-color-burnicklgruen: #c7d416;
  --ion-color-burnicklgruen-rgb: 0, 128, 0;
  --ion-color-burnicklgruen-contrast: #ffffff;
  --ion-color-burnicklgruen-contrast-rgb: 0, 0, 0;
  --ion-color-burnicklgruen-shade: #c7d416;
  --ion-color-burnicklgruen-tint: #c7d416;

   */
  --ion-color-burnicklgruen: #444444;
  --ion-color-burnicklgruen-rgb: 0, 128, 0;
  --ion-color-burnicklgruen-contrast: #ffffff;
  --ion-color-burnicklgruen-contrast-rgb: 0, 0, 0;
  --ion-color-burnicklgruen-shade: 444444;
  --ion-color-burnicklgruen-tint: #444444;
  --ion-color-baeblau: #307ac1;
  --ion-color-baeblau-rgb: 0, 128, 0;
  --ion-color-baeblau-contrast: #ffffff;
  --ion-color-baeblau-contrast-rgb: 0, 0, 0;
  --ion-color-baeblau-shade: #307ac1;
  --ion-color-baeblau-tint: #307ac1;
  --ion-color-burnicklgrau: #354547;
  --ion-color-burnicklgrau-rgb: 0, 128, 0;
  --ion-color-burnicklgrau-contrast: #ffffff;
  --ion-color-burnicklgrau-contrast-rgb: 0, 0, 0;
  --ion-color-burnicklgrau-shade: #354547;
  --ion-color-burnicklgrau-tint: #354547;
  --ion-color-menuegruen: #009b00;
  --ion-color-menuegruen-rgb: 85, 252, 94;
  --ion-color-menuegruen-contrast: #ffffff;
  --ion-color-menuegruen-contrast-rgb: 0, 0, 0;
  --ion-color-menuegruen-shade: #000000;
  --ion-color-menuegruen-tint: #008d00;
  --ion-color-menuetitlegruen: #008000;
  --ion-color-menuetitlegruen-rgb: 0, 128, 0;
  --ion-color-menuetitlegruen-contrast: #ffffff;
  --ion-color-menuetitlegruen-contrast-rgb: 0, 0, 0;
  --ion-color-menuetitlegruen-shade: #000000;
  --ion-color-menuetitlegruen-tint: #009000;
  --ion-color-menuedisabled: #444444;
  --ion-color-menuedisabled-rgb: 0, 128, 0;
  --ion-color-menuedisabled-contrast: #ffffff;
  --ion-color-menuedisabled-contrast-rgb: 0, 0, 0;
  --ion-color-menuedisabled-shade: #000000;
  --ion-color-menuedisabled-tint: #444444;
  --ion-color-dunkelgelb: #ffcc00;
  --ion-color-dunkelgelb-rgb: 255, 204, 0;
  --ion-color-dunkelgelb-contrast: #000000;
  --ion-color-dunkelgelb-contrast-rgb: 0, 0, 0;
  --ion-color-dunkelgelb-shade: #000000;
  --ion-color-dunkelgelb-tint: #000000;
  --ion-color-orange: #ff6600;
  --ion-color-orange-rgb: 255, 102, 0;
  --ion-color-orange-contrast: #ffffff;
  --ion-color-orange-contrast-rgb: 255, 255, 255;
  --ion-color-orange-shade: #ff7000;
  --ion-color-orange-tint: #ff7700;
  --ion-color-menueorange: #ff812d;
  --ion-color-menueorange-rgb: 17, 255, 150;
  --ion-color-menueorange-contrast: #ffffff;
  --ion-color-menueorange-contrast-rgb: 255, 255, 255;
  --ion-color-menueorange-shade: #000000;
  --ion-color-menueorange-tint: #000000;
  --ion-color-menuetitleorange: #ff6600;
  --ion-color-menuetitleorange-rgb: 255, 102, 0;
  --ion-color-menuetitleorange-contrast: #ffffff;
  --ion-color-menuetitleorange-contrast-rgb: 255, 255, 255;
  --ion-color-menuetitleorange-shade: #000000;
  --ion-color-menuetitleorange-tint: #ff7700;
  --ion-color-menuetitlegrau: #444444;
  --ion-color-menuetitlegrau-rgb: 255, 102, 0;
  --ion-color-menuetitlegrau-contrast: #ffffff;
  --ion-color-menuetitlegrau-contrast-rgb: 255, 255, 255;
  --ion-color-menuetitlegrau-shade: #000000;
  --ion-color-menuetitlegrau-tint: #444444;
  --ion-color-grau: #454545;
  --ion-color-grau-rgb: 68, 68, 68;
  --ion-color-grau-contrast: #ffffff;
  --ion-color-grau-contrast-rgb: 255, 255, 255;
  --ion-color-grau-shade: #000000;
  --ion-color-grau-tint: #454545;
  --ion-color-graudisabled: #444444;
  --ion-color-graudisabled-rgb: 68, 68, 68;
  --ion-color-graudisabled-contrast: #ffffff;
  --ion-color-graudisabled-contrast-rgb: 255, 255, 255;
  --ion-color-graudisabled-shade: #444444;
  --ion-color-graudisabled-tint: #444444;
  --ion-color-dunkelgrau: #000000;
  --ion-color-dunkelgrau-rgb: 102, 102, 102;
  --ion-color-dunkelgrau-contrast: #ffffff;
  --ion-color-dunkelgrau-contrast-rgb: 255, 255, 255;
  --ion-color-dunkelgrau-shade: #000000;
  --ion-color-dunkelgrau-tint: #000000;
  --ion-color-silber: #999999;
  --ion-color-silber-rgb: 68, 68, 68;
  --ion-color-silber-contrast: #ffffff;
  --ion-color-silber-contrast-rgb: 255, 255, 255;
  --ion-color-silber-shade: black;
  --ion-color-silber-tint: black;
  --ion-color-schwarz: #000000;
  --ion-color-schwarz-rgb: 0, 0, 0;
  --ion-color-schwarz-contrast: #ffffff;
  --ion-color-schwarz-contrast-rgb: 255, 255, 255;
  --ion-color-schwarz-shade: #000000;
  --ion-color-schwarz-tint: #000000;
  --ion-color-weiss: #ffffff;
  --ion-color-weiss-rgb: 255, 255, 255;
  --ion-color-weiss-contrast: #000000;
  --ion-color-weiss-contrast-rgb: 0, 0, 0;
  --ion-color-weiss-shade: #000000;
  --ion-color-weiss-tint: #000000;
  --ion-color-rot: #D40000;
  --ion-color-rot-rgb: 0, 255, 106;
  --ion-color-rot-contrast: #ffffff;
  --ion-color-rot-contrast-rgb: 255, 255, 255;
  --ion-color-rot-shade: #d42d19;
  --ion-color-rot-tint: #d42d19;
  --ion-color-menuetitlerot: #D40000;
  --ion-color-menuetitlerot-rgb: 0, 255, 106;
  --ion-color-menuetitlerot-contrast: #ffffff;
  --ion-color-menuetitlerot-contrast-rgb: 255, 255, 255;
  --ion-color-menuetitlerot-shade: #000000;
  --ion-color-menuetitlerot-tint: #d42d19;
  --ion-color-menuetitleteal: teal;
  --ion-color-menuetitleteal-rgb: 0, 255, 106;
  --ion-color-menuetitleteal-contrast: #ffffff;
  --ion-color-menuetitleteal-contrast-rgb: 255, 255, 255;
  --ion-color-menuetitleteal-shade: #000000;
  --ion-color-menuetitleteal-tint: teal;
  --ion-color-blau: #3771c8;
  --ion-color-blau-rgb: 153, 145, 128;
  --ion-color-blau-contrast: #ffffff;
  --ion-color-blau-contrast-rgb: 255, 255, 255;
  --ion-color-blau-shade: #3771ac;
  --ion-color-blau-tint: #3771ac;
  --ion-color-dunkelblau: #0020C2;
  --ion-color-dunkelblau-rgb: 153, 145, 128;
  --ion-color-dunkelblau-contrast: #ffffff;
  --ion-color-dunkelblau-contrast-rgb: 255, 255, 255;
  --ion-color-dunkelblau-shade: #3771ac;
  --ion-color-dunkelblau-tint: #3771ac;
  --ion-color-menueblau: #6495ED;
  --ion-color-menueblau-rgb: 128, 255, 64;
  --ion-color-menueblau-contrast: #ffffff;
  --ion-color-menueblau-contrast-rgb: 255, 255, 255;
  --ion-color-menueblau-shade: #6495ED;
  --ion-color-menueblau-tint: #6495ED;
  --ion-color-problau: #2f6299;
  --ion-color-problau-rgb: 47, 98, 153;
  --ion-color-problau-contrast: #ffffff;
  --ion-color-problau-contrast-rgb: 255, 255, 255;
  --ion-color-problau-shade: #2f6299;
  --ion-color-problau-tint: #2f6299;
  --ion-color-menuetitleblau: #3771c8;
  --ion-color-menuetitleblau-rgb: 153, 145, 128;
  --ion-color-menuetitleblau-contrast: #ffffff;
  --ion-color-menuetitleblau-contrast-rgb: 255, 255, 255;
  --ion-color-menuetitleblau-shade: #000000;
  --ion-color-menuetitleblau-tint: #3771ac;
  --ion-color-braun: #a0522d;
  --ion-color-braun-rgb: 14, 143, 102;
  --ion-color-braun-contrast: #ffffff;
  --ion-color-braun-contrast-rgb: 255, 255, 255;
  --ion-color-braun-shade: #a0522d;
  --ion-color-braun-tint: #a0522d;
  --ion-color-burnicklbraun: #7b6a58;
  --ion-color-burnicklbraun-rgb: 14, 143, 102;
  --ion-color-burnicklbraun-contrast: #ffffff;
  --ion-color-burnicklbraun-contrast-rgb: 255, 255, 255;
  --ion-color-burnicklbraun-shade: #7b6a58;
  --ion-color-burnicklbraun-tint: #7b6a58;
  --ion-color-teal: #008080;
  --ion-color-teal-rgb: 128, 255, 64;
  --ion-color-teal-contrast: #ffffff;
  --ion-color-teal-contrast-rgb: 255, 255, 255;
  --ion-color-teal-shade: #009898;
  --ion-color-teal-tint: #009898;
  --ion-color-menutitleteal: #008080;
  --ion-color-menutitleteal-rgb: 128, 255, 64;
  --ion-color-menutitleteal-contrast: #ffffff;
  --ion-color-menutitleteal-contrast-rgb: 255, 255, 255;
  --ion-color-menutitleteal-shade: #000000;
  --ion-color-menutitleteal-tint: #000000;
  --ion-color-menueteal: #009898;
  --ion-color-menueteal-rgb: 128, 255, 64;
  --ion-color-menueteal-contrast: #ffffff;
  --ion-color-menueteal-contrast-rgb: 255, 255, 255;
  --ion-color-menueteal-shade: #008075;
  --ion-color-menueteal-tint: #008075;
  --ion-color-gelb: #ffdd00;
  --ion-color-gelb-rgb: 255, 221, 0;
  --ion-color-gelb-contrast: #ffffff;
  --ion-color-gelb-contrast-rgb: 255, 255, 255;
  --ion-color-gelb-shade: #ffd000;
  --ion-color-gelb-tint: #ffd000;
  --ion-color-menutitlegelb: #ffcc00;
  --ion-color-menutitlegelb-rgb: 255, 204, 0;
  --ion-color-menutitlegelb-contrast: #ffffff;
  --ion-color-menutitlegelb-contrast-rgb: 255, 255, 255;
  --ion-color-menutitlegelb-shade: #000000;
  --ion-color-menutitlegelb-tint: #000000;
}

.ion-color-gruen {
  --ion-color-base: var(--ion-color-gruen) !important;
  --ion-color-base-rgb: var(--ion-color-gruen-rgb) !important;
  --ion-color-contrast: var(--ion-color-gruen-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-gruen-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-gruen-shade) !important;
  --ion-color-tint: var(--ion-color-gruen-tint) !important;
}

.ion-color-burnicklgruen {
  --ion-color-base: var(--ion-color-burnicklgruen) !important;
  --ion-color-base-rgb: var(--ion-color-burnicklgruen-rgb) !important;
  --ion-color-contrast: var(--ion-color-burnicklgruen-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-burnicklgruen-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-burnicklgruen-shade) !important;
  --ion-color-tint: var(--ion-color-burnicklgruen-tint) !important;
}

.ion-color-baeblau {
  --ion-color-base: var(--ion-color-baeblau) !important;
  --ion-color-base-rgb: var(--ion-color-baeblau-rgb) !important;
  --ion-color-contrast: var(--ion-color-baeblau-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-baeblau-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-baeblau-shade) !important;
  --ion-color-tint: var(--ion-color-baeblau-tint) !important;
}

.ion-color-burnicklgrau {
  --ion-color-base: var(--ion-color-burnicklgrau) !important;
  --ion-color-base-rgb: var(--ion-color-burnicklgrau-rgb) !important;
  --ion-color-contrast: var(--ion-color-burnicklgrau-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-burnicklgrau-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-burnicklgrau-shade) !important;
  --ion-color-tint: var(--ion-color-burnicklgrau-tint) !important;
}

.ion-color-menuegruen {
  --ion-color-base: var(--ion-color-menuegruen) !important;
  --ion-color-base-rgb: var(--ion-color-menuegruen-rgb) !important;
  --ion-color-contrast: var(--ion-color-menuegruen-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menuegruen-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menuegruen-shade) !important;
  --ion-color-tint: var(--ion-color-menuegruen-tint) !important;
}

.ion-color-menuetitlegruen {
  --ion-color-base: var(--ion-color-menuetitlegruen) !important;
  --ion-color-base-rgb: var(--ion-color-menuetitlegruen-rgb) !important;
  --ion-color-contrast: var(--ion-color-menuetitlegruen-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menuetitlegruen-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menuetitlegruen-shade) !important;
  --ion-color-tint: var(--ion-color-menuetitlegruen-tint) !important;
}

.ion-color-dunkelgelb {
  --ion-color-base: var(--ion-color-dunkelgelb) !important;
  --ion-color-base-rgb: var(--ion-color-dunkelgelb-rgb) !important;
  --ion-color-contrast: var(--ion-color-dunkelgelb-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-dunkelgelb-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-dunkelgelb-shade) !important;
  --ion-color-tint: var(--ion-color-dunkelgelb-tint) !important;
}

.ion-color-grau {
  --ion-color-base: var(--ion-color-grau) !important;
  --ion-color-base-rgb: var(--ion-color-grau-rgb) !important;
  --ion-color-contrast: var(--ion-color-grau-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-grau-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-grau-shade) !important;
  --ion-color-tint: var(--ion-color-grau-tint) !important;
}

.ion-color-graudisabled {
  --ion-color-base: var(--ion-color-graudisabled) !important;
  --ion-color-base-rgb: var(--ion-color-graudisabled-rgb) !important;
  --ion-color-contrast: var(--ion-color-graudisabled-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-graudisabled-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-graudisabled-shade) !important;
  --ion-color-tint: var(--ion-color-graudisabled-tint) !important;
}

.ion-color-dunkelgrau {
  --ion-color-base: var(--ion-color-dunkelgrau) !important;
  --ion-color-base-rgb: var(--ion-color-dunkelgrau-rgb) !important;
  --ion-color-contrast: var(--ion-color-dunkelgrau-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-dunkelgrau-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-dunkelgrau-shade) !important;
  --ion-color-tint: var(--ion-color-dunkelgrau-tint) !important;
}

.ion-color-silber {
  --ion-color-base: var(--ion-color-silber) !important;
  --ion-color-base-rgb: var(--ion-color-silber-rgb) !important;
  --ion-color-contrast: var(--ion-color-silber-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-silber-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-silber-shade) !important;
  --ion-color-tint: var(--ion-color-silber-tint) !important;
}

.ion-color-schwarz {
  --ion-color-base: var(--ion-color-schwarz) !important;
  --ion-color-base-rgb: var(--ion-color-schwarz-rgb) !important;
  --ion-color-contrast: var(--ion-color-schwarz-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-schwarz-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-schwarz-shade) !important;
  --ion-color-tint: var(--ion-color-schwarz-tint) !important;
}

.ion-color-orange {
  --ion-color-base: var(--ion-color-orange) !important;
  --ion-color-base-rgb: var(--ion-color-orange-rgb) !important;
  --ion-color-contrast: var(--ion-color-orange-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-orange-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-orange-shade) !important;
  --ion-color-tint: var(--ion-color-orange-tint) !important;
}

.ion-color-menueorange {
  --ion-color-base: var(--ion-color-menueorange) !important;
  --ion-color-base-rgb: var(--ion-color-menueorange-rgb) !important;
  --ion-color-contrast: var(--ion-color-menueorange-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menueorange-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menueorange-shade) !important;
  --ion-color-tint: var(--ion-color-menueorange-tint) !important;
}

.ion-color-menuetitleorange {
  --ion-color-base: var(--ion-color-menuetitleorange) !important;
  --ion-color-base-rgb: var(--ion-color-menuetitleorange-rgb) !important;
  --ion-color-contrast: var(--ion-color-menuetitleorange-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menuetitleorange-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menuetitleorange-shade) !important;
  --ion-color-tint: var(--ion-color-menuetitleorange-tint) !important;
}

.ion-color-menuetitlegrau {
  --ion-color-base: var(--ion-color-menuetitlegrau) !important;
  --ion-color-base-rgb: var(--ion-color-menuetitlegrau-rgb) !important;
  --ion-color-contrast: var(--ion-color-menuetitlegrau-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menuetitlegrau-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menuetitlegrau-shade) !important;
  --ion-color-tint: var(--ion-color-menuetitlegrau-tint) !important;
}

.ion-color-weiss {
  --ion-color-base: var(--ion-color-weiss) !important;
  --ion-color-base-rgb: var(--ion-color-weiss-rgb) !important;
  --ion-color-contrast: var(--ion-color-weiss-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-weiss-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-weiss-shade) !important;
  --ion-color-tint: var(--ion-color-weiss-tint) !important;
}

.ion-color-rot {
  --ion-color-base: var(--ion-color-rot) !important;
  --ion-color-base-rgb: var(--ion-color-rot-rgb) !important;
  --ion-color-contrast: var(--ion-color-rot-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-rot-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-rot-shade) !important;
  --ion-color-tint: var(--ion-color-rot-tint) !important;
}

.ion-color-menuetitlerot {
  --ion-color-base: var(--ion-color-menuetitlerot) !important;
  --ion-color-base-rgb: var(--ion-color-menuetitlerot-rgb) !important;
  --ion-color-contrast: var(--ion-color-menuetitlerot-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menuetitlerot-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menuetitlerot-shade) !important;
  --ion-color-tint: var(--ion-color-menuetitlerot-tint) !important;
}

.ion-color-menuetitleteal {
  --ion-color-base: var(--ion-color-menuetitleteal) !important;
  --ion-color-base-rgb: var(--ion-color-menuetealleteal-rgb) !important;
  --ion-color-contrast: var(--ion-color-menuetitleteal-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menuetitleteal-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menuetitleteal-shade) !important;
  --ion-color-tint: var(--ion-color-menuetitleteal-tint) !important;
}

.ion-color-menuedisabled {
  --ion-color-base: var(--ion-color-menuedisabled) !important;
  --ion-color-base-rgb: var(--ion-color-menuedisabled-rgb) !important;
  --ion-color-contrast: var(--ion-color-menuedisabled-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menuedisabled-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menuedisabled-shade) !important;
  --ion-color-tint: var(--ion-color-menuedisabled-tint) !important;
}

.ion-color-blau {
  --ion-color-base: var(--ion-color-blau) !important;
  --ion-color-base-rgb: var(--ion-color-blau-rgb) !important;
  --ion-color-contrast: var(--ion-color-blau-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-blau-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-blau-shade) !important;
  --ion-color-tint: var(--ion-color-blau-tint) !important;
}

.ion-color-dunkelblau {
  --ion-color-base: var(--ion-color-dunkelblau) !important;
  --ion-color-base-rgb: var(--ion-color-dunkelblau-rgb) !important;
  --ion-color-contrast: var(--ion-color-dunkelblau-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-dunkelblau-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-dunkelblau-shade) !important;
  --ion-color-tint: var(--ion-color-dunkelblau-tint) !important;
}

.ion-color-menueblau {
  --ion-color-base: var(--ion-color-menueblau) !important;
  --ion-color-base-rgb: var(--ion-color-menueblau-rgb) !important;
  --ion-color-contrast: var(--ion-color-menueblau-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menueblau-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menueblau-shade) !important;
  --ion-color-tint: var(--ion-color-menueblau-tint) !important;
}

.ion-color-problau {
  --ion-color-base: var(--ion-color-problau) !important;
  --ion-color-base-rgb: var(--ion-color-problau-rgb) !important;
  --ion-color-contrast: var(--ion-color-problau-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-problau-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-problau-shade) !important;
  --ion-color-tint: var(--ion-color-problau-tint) !important;
}

.ion-color-menuetitleblau {
  --ion-color-base: var(--ion-color-menuetitleblau) !important;
  --ion-color-base-rgb: var(--ion-color-menuetitleblau-rgb) !important;
  --ion-color-contrast: var(--ion-color-menuetitleblau-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menuetitleblau-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menuetitleblau-shade) !important;
  --ion-color-tint: var(--ion-color-menuetitleblau-tint) !important;
}

.ion-color-braun {
  --ion-color-base: var(--ion-color-braun) !important;
  --ion-color-base-rgb: var(--ion-color-braun-rgb) !important;
  --ion-color-contrast: var(--ion-color-braun-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-braun-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-braun-shade) !important;
  --ion-color-tint: var(--ion-color-braun-tint) !important;
}

.ion-color-burnicklbraun {
  --ion-color-base: var(--ion-color-burnicklbraun) !important;
  --ion-color-base-rgb: var(--ion-color-burnicklbraun-rgb) !important;
  --ion-color-contrast: var(--ion-color-burnicklbraun-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-burnicklbraun-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-burnicklbraun-shade) !important;
  --ion-color-tint: var(--ion-color-burnicklbraun-tint) !important;
}

.ion-color-teal {
  --ion-color-base: var(--ion-color-teal) !important;
  --ion-color-base-rgb: var(--ion-color-teal-rgb) !important;
  --ion-color-contrast: var(--ion-color-teal-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-teal-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-teal-shade) !important;
  --ion-color-tint: var(--ion-color-teal-tint) !important;
}

.ion-color-menueteal {
  --ion-color-base: var(--ion-color-menueteal) !important;
  --ion-color-base-rgb: var(--ion-color-menueteal-rgb) !important;
  --ion-color-contrast: var(--ion-color-menueteal-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menueteal-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menueteal-shade) !important;
  --ion-color-tint: var(--ion-color-menueteal-tint) !important;
}

.ion-color-menutitleteal {
  --ion-color-base: var(--ion-color-menutitleteal) !important;
  --ion-color-base-rgb: var(--ion-color-menutitleteal-rgb) !important;
  --ion-color-contrast: var(--ion-color-menutitleteal-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menutitleteal-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menutitleteal-shade) !important;
  --ion-color-tint: var(--ion-color-menutitleteal-tint) !important;
}

.ion-color-gelb {
  --ion-color-base: var(--ion-color-gelb) !important;
  --ion-color-base-rgb: var(--ion-color-gelb-rgb) !important;
  --ion-color-contrast: var(--ion-color-gelb-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-gelb-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-gelb-shade) !important;
  --ion-color-tint: var(--ion-color-gelb-tint) !important;
}

.ion-color-menutitlegelb {
  --ion-color-base: var(--ion-color-menutitlegelb) !important;
  --ion-color-base-rgb: var(--ion-color-menutitlegelb-rgb) !important;
  --ion-color-contrast: var(--ion-color-menutitlegelb-contrast) !important;
  --ion-color-contrast-rgb: var(--ion-color-menutitlegelb-contrast-rgb) !important;
  --ion-color-shade: var(--ion-color-menutitlegelb-shade) !important;
  --ion-color-tint: var(--ion-color-menutitlegelb-tint) !important;
}

:root .angular-editor-toolbar {
  font: 100 14px/15px Roboto, Arial, sans-serif !important;
  background-color: #444444 !important;
}
:root .angular-editor-toolbar-set .angular-editor-button {
  background-color: silver !important;
  color: black !important;
}
:root .doctablecontainer {
  width: 100%;
  margin-top: 4px;
}
:root .doctableheader {
  width: 100%;
  color: white;
  background: var(--ion-color-primary);
  padding: 2px;
  border-top-left-radius: 0.5vh;
  border-top-right-radius: 0.5vh;
  box-sizing: border-box;
  display: flex;
  align-items: center;
}
:root .doctablecontent {
  width: 100%;
  padding: 1vh;
  border: 1px solid var(--ion-color-primary);
  box-sizing: border-box;
  background: white;
  color: black;
}
:root .doctableitem {
  width: 100%;
  padding-top: 1.3vh;
  padding-bottom: 1.3vh;
  box-sizing: border-box;
}
:root .doctabletrenner {
  width: 100%;
  height: 1px;
  background: var(--ion-color-schwarz);
}
:root .docinnertablespezial td {
  padding: 4px;
  border-bottom: 1px solid var(--ion-color-schwarz);
  border-left: 1px solid var(--ion-color-schwarz);
  border-right: 1px solid var(--ion-color-schwarz);
}
:root .docinnertable {
  border: 1px solid #000000;
}
:root .docinnertable td {
  padding: 4px;
  border: 1px solid var(--ion-color-schwarz);
}
:root .docinnertablesmall {
  border: 1px solid #000000;
}
:root .docinnertablesmall td {
  padding: 2px;
  border: 1px solid var(--ion-color-schwarz);
}
:root .docinnertablenopadding {
  border: 1px solid #000000;
}
:root .docinnertablenopadding td {
  padding: 0px;
  border: 1px solid var(--ion-color-schwarz);
}
:root .docinnertablenew td {
  padding: 4px;
  border-left: 1px solid var(--ion-color-schwarz);
  border-right: 1px solid var(--ion-color-schwarz);
  border-bottom: 1px solid var(--ion-color-schwarz);
  border-top: none;
}
:root .docinnertablesmallfont {
  border: 1px solid #000000;
}
:root .docinnertablesmallfont td {
  font-size: 85%;
  padding: 4px;
  border: 1px solid var(--ion-color-schwarz);
}
:root .paddingtablesenkrecht {
  border-collapse: collapse;
}
:root .paddingtablesenkrecht td {
  padding-top: 4px;
  padding-bottom: 4px;
}
:root .paddingtable {
  border-collapse: collapse;
}
:root .paddingtable td {
  padding: 4px;
}
:root .paddingsmalltable {
  border-collapse: collapse;
}
:root .paddingsmalltable td {
  padding: 2px;
}
:root .nopaddingtable {
  border-collapse: collapse;
}
:root .nopaddingtable td {
  padding: 0px;
}
:root .nobordertable {
  border-collapse: collapse !important;
}
:root .nobordertable td {
  padding: 4px;
  border: none;
}
:root .nobordersmalltable {
  border-collapse: collapse !important;
}
:root .nobordersmalltable td {
  padding: 0px;
  border: none !important;
}
:root .reddoctableheader {
  width: 100%;
  color: var(--ion-color-light);
  background: var(--ion-color-teal);
  padding: 6px;
  border-radius: 4px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
}
:root .reddoctableheaderextended {
  width: 100%;
  color: var(--ion-color-light);
  background: var(--ion-color-teal);
  padding: 6px;
  border-top-left-radius: 4px;
  border-bottom-left-radius: 0px;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 0px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
}
:root .reddoctablecontent {
  width: 100%;
  border: 1px solid var(--ion-color-teal);
  box-sizing: border-box;
  background: white;
}
:root .greendoctableheader {
  width: 100%;
  color: var(--ion-color-light);
  background: var(--ion-color-gruen);
  padding: 1vh;
  border-top-left-radius: 0.5vh;
  border-top-right-radius: 0.5vh;
  box-sizing: border-box;
  display: flex;
  align-items: center;
}
:root .greendoctablecontent {
  width: 100%;
  padding: 1vh;
  border: 1px solid var(--ion-color-gruen);
  box-sizing: border-box;
  background: white;
}

:root {
  /*
  div.timepicker__actions.ng-tns-c146-0 > div:nth-child(1) > div  { // :nth-child(1) > div

    background: none !important;
    color: #c7d304 !important;
    cursor: pointer !important;
  }

  div.timepicker__actions.ng-tns-c146-0 > div:nth-child(2) > div  { // :nth-child(1) > div

    background: none !important;
    color: #c7d304 !important;
    cursor: pointer !important;
  }

   */
}
:root div.timepicker__actions.ng-tns-c146-0 {
  background: #354547 !important;
}
:root div.css-1obar3y {
  display: none !important;
}
:root body {
  font-size: 12px;
}
:root ion-radio {
  --color: #7b6a58;
  --color-checked: #7b6a58;
}
:root body::-webkit-scrollbar {
  display: none;
}
:root .alert-tappable.alert-radio {
  height: auto;
  contain: content;
}
:root .alert-radio-label.sc-ion-alert-md,
:root .alert-radio-label.sc-ion-alert-ios {
  white-space: normal;
}
:root ion-content {
  --background: white;
  --color: black;
}
:root ::-webkit-scrollbar, :root *::-webkit-scrollbar {
  display: none;
  overflow: hidden;
}
:root .scroll-content {
  overflow: hidden;
}
:root .rootbuttonclass {
  cursor: pointer;
  min-width: 32px;
  min-height: 32px;
  display: flex;
  justify-content: center;
  align-items: center;
}
:root .rootbuttonsmallclass {
  cursor: pointer;
  width: 28px;
  height: 28px;
  display: flex;
  justify-content: center;
  align-items: center;
  background: #454545;
  border-radius: 3px;
}
:root .filedropcontentclass {
  height: 50px;
  color: #444444;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
}
:root .filedropzoneclass {
  height: 58px;
  border: 2px dotted #444444;
  border-radius: 8px;
  padding: 4px;
}
:root .footerbuttonrightclass {
  height: 100%;
  min-height: 44px;
  display: flex;
  align-items: center;
  float: right;
  padding-right: 2px;
}
:root .footerbuttonleftclass {
  height: 100%;
  min-height: 44px;
  display: flex;
  align-items: center;
  float: left;
  padding-left: 2px;
}
:root .badgeclass {
  font-size: 70%;
}

/* Core CSS required for Ionic components to work properly */
/* Basic CSS for apps built with Ionic */
/* Optional CSS utils that can be commented out */

/*# sourceMappingURL=styles.css.map*/